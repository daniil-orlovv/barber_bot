import datetime
import logging

from aiogram import Bot, F, Router, types
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy.orm import Session

from api.auth import auth, send_sms_code
from filters.filters import CheckCallbackAuth
from states.states import Auth
from utils.utils_db import check_exist_client_in_db

logger = logging.getLogger(__name__)

router = Router()


current_year = datetime.datetime.now().year


@router.message(F.text == '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è üîë')
async def ask_phone(message: Message, state: FSMContext,
                    session: Session) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–¥–ø–∏—Å—å—é '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è üîë' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ —Ç–æ–º, —á—Ç–æ
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω."""

    telegram_id = message.from_user.id

    user_auth = check_exist_client_in_db(session, telegram_id)
    if not user_auth:
        await message.delete()
        sent_message = await message.answer(
            text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 79991234567:')
        sent_message_id = sent_message.message_id
        await state.update_data(id_message=sent_message_id)

        await state.set_state(Auth.waiting_phone)
    else:
        await message.answer(text='–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!')


@router.callback_query(CheckCallbackAuth())
async def ask_phone_callback(callback: types.CallbackQuery, state: FSMContext,
                             session: Session) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ callback='auth' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å
    –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ
    –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω."""

    telegram_id = callback.message.from_user.id

    user_auth = check_exist_client_in_db(session, telegram_id)
    if not user_auth:
        await callback.message.edit_text(
            text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 79991234567:')
        sent_message_id = callback.message.message_id
        await state.update_data(id_message=sent_message_id)

        await state.set_state(Auth.waiting_phone)
    else:
        await callback.message.edit_text(text='–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!')


@router.message(StateFilter(Auth.waiting_phone))
async def get_phone_ask_name(message: Message, state: FSMContext,
                             bot: Bot) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Auth.waiting_phone, –æ–∂–∏–¥–∞–µ—Ç –∏ –ø–æ–ª—É—á–∞–µ—Ç
    –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∏–º—è
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    phone = message.text
    if not phone.isdigit() or not phone.startswith('7') or len(phone) != 11:
        await message.answer(
            text='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return
    await state.update_data(phone=phone)

    state_data = await state.get_data()
    message_id = state_data['id_message']
    await bot.delete_message(chat_id=message.chat.id, message_id=message_id)
    await message.delete()

    sent_message = await message.answer(
        text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è: ')
    sent_message_id = sent_message.message_id
    await state.update_data(id_message=sent_message_id)

    await state.set_state(Auth.waiting_name)


@router.message(StateFilter(Auth.waiting_name))
async def get_name_send_code(message: Message, state: FSMContext,
                             bot: Bot) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Auth.waiting_name, –æ–∂–∏–¥–∞–µ—Ç –∏ –ø–æ–ª—É—á–∞–µ—Ç –∏–º—è
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û–ø—Ä–∞–≤–ª—è–µ—Ç
    –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""

    name = message.text
    if not name.isalpha():
        await message.answer(
            text='–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return
    await state.update_data(name=name)

    state_data = await state.get_data()
    phone = state_data['phone']
    send_sms_code(phone, name)

    state_data = await state.get_data()
    message_id = state_data['id_message']
    await bot.delete_message(chat_id=message.chat.id, message_id=message_id)
    await message.delete()

    sent_message = await message.answer(
        text=('–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.'
              '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ WhatsApp –∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥: '))
    sent_message_id = sent_message.message_id
    await state.update_data(id_message=sent_message_id)

    await state.set_state(Auth.waiting_code)


@router.message(StateFilter(Auth.waiting_code))
async def get_code(message: Message, state: FSMContext, session: Session,
                   bot: Bot) -> None:
    """–•—ç–Ω–¥–ª–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Auth.waiting_code, –æ–∂–∏–¥–∞–µ—Ç –∏ –ø–æ–ª—É—á–∞–µ—Ç
    –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ. –ï—Å–ª–∏ –∫–æ–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Ç–æ —É–≤–µ–¥–æ–º–ª—è–µ—Ç
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ –æ–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω."""

    state_data = await state.get_data()
    name = state_data['name']
    phone = state_data['phone']
    code = message.text
    if not code.isdigit() or len(code) != 4:
        await message.answer(
            text='–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 4 —Ü–∏—Ñ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return
    telegram_id = message.from_user.id

    result = auth(session, name, phone, code, telegram_id)

    state_data = await state.get_data()
    message_id = state_data['id_message']
    await bot.delete_message(chat_id=message.chat.id, message_id=message_id)
    await message.delete()

    if result['success'] is True:
        await message.answer(
            text='–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã! ‚úÖ')
    if result['success'] is False:
        await message.answer(
            text='–û—à–∏–±–∫–∞! ‚ùå')

    await state.clear()
